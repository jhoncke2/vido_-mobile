// Mocks generated by Mockito 5.2.0 from annotations
// in vido/test/features/photos_translator/external/photos_translator_remote_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;
import 'dart:convert' as _i9;
import 'dart:io' as _i15;
import 'dart:typed_data' as _i10;

import 'package:http/src/base_request.dart' as _i11;
import 'package:http/src/client.dart' as _i7;
import 'package:http/src/response.dart' as _i2;
import 'package:http/src/streamed_response.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:vido/core/utils/http_responses_manager.dart' as _i14;
import 'package:vido/core/utils/path_provider.dart' as _i13;
import 'package:vido/features/photos_translator/domain/entities/pdf_file.dart'
    as _i4;
import 'package:vido/features/photos_translator/domain/entities/translation.dart'
    as _i6;
import 'package:vido/features/photos_translator/domain/entities/translations_file.dart'
    as _i5;
import 'package:vido/features/photos_translator/external/photos_translator_remote_adapter.dart'
    as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResponse_0 extends _i1.Fake implements _i2.Response {}

class _FakeStreamedResponse_1 extends _i1.Fake implements _i3.StreamedResponse {
}

class _FakePdfFile_2 extends _i1.Fake implements _i4.PdfFile {}

class _FakeTranslationsFile_3 extends _i1.Fake implements _i5.TranslationsFile {
}

class _FakeTranslation_4 extends _i1.Fake implements _i6.Translation {}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i7.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i8.Future<_i2.Response>);
  @override
  _i8.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i8.Future<_i2.Response>);
  @override
  _i8.Future<_i2.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i9.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i8.Future<_i2.Response>);
  @override
  _i8.Future<_i2.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i9.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i8.Future<_i2.Response>);
  @override
  _i8.Future<_i2.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i9.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i8.Future<_i2.Response>);
  @override
  _i8.Future<_i2.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i9.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i8.Future<_i2.Response>);
  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i10.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i10.Uint8List>.value(_i10.Uint8List(0)))
          as _i8.Future<_i10.Uint8List>);
  @override
  _i8.Future<_i3.StreamedResponse> send(_i11.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i3.StreamedResponse>.value(_FakeStreamedResponse_1()))
          as _i8.Future<_i3.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [PhotosTranslatorAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotosTranslatorAdapter extends _i1.Mock
    implements _i12.PhotosTranslatorRemoteAdapter {
  MockPhotosTranslatorAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.PdfFile> getPdfFilesFromJson(List<Map<String, dynamic>>? jsonList) =>
      (super.noSuchMethod(Invocation.method(#getPdfFilesFromJson, [jsonList]),
          returnValue: <_i4.PdfFile>[]) as List<_i4.PdfFile>);
  @override
  List<Map<String, dynamic>> getJsonListFromPdfFiles(
          List<_i4.PdfFile>? files) =>
      (super.noSuchMethod(Invocation.method(#getJsonListFromPdfFiles, [files]),
          returnValue: <Map<String, dynamic>>[]) as List<Map<String, dynamic>>);
  @override
  _i4.PdfFile getPdfFileFromJson(Map<String, dynamic>? json) =>
      (super.noSuchMethod(Invocation.method(#getPdfFileFromJson, [json]),
          returnValue: _FakePdfFile_2()) as _i4.PdfFile);
  @override
  List<_i5.TranslationsFile> getTranslationsFilesFromJson(
          List<Map<String, dynamic>>? jsonList) =>
      (super.noSuchMethod(
          Invocation.method(#getTranslationsFilesFromJson, [jsonList]),
          returnValue: <_i5.TranslationsFile>[]) as List<_i5.TranslationsFile>);
  @override
  List<Map<String, dynamic>> getJsonListFromTranslationsFiles(
          List<_i5.TranslationsFile>? files) =>
      (super.noSuchMethod(
          Invocation.method(#getJsonListFromTranslationsFiles, [files]),
          returnValue: <Map<String, dynamic>>[]) as List<Map<String, dynamic>>);
  @override
  _i5.TranslationsFile getTranslationsFileFromJson(
          Map<String, dynamic>? json) =>
      (super.noSuchMethod(
          Invocation.method(#getTranslationsFileFromJson, [json]),
          returnValue: _FakeTranslationsFile_3()) as _i5.TranslationsFile);
  @override
  _i6.Translation getTranslationFromJson(Map<String, dynamic>? json) =>
      (super.noSuchMethod(Invocation.method(#getTranslationFromJson, [json]),
          returnValue: _FakeTranslation_4()) as _i6.Translation);
}

/// A class which mocks [PathProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPathProvider extends _i1.Mock implements _i13.PathProvider {
  MockPathProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> generatePath() =>
      (super.noSuchMethod(Invocation.method(#generatePath, []),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
}

/// A class which mocks [HttpResponsesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpResponsesManager extends _i1.Mock
    implements _i14.HttpResponsesManager {
  MockHttpResponsesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i10.Uint8List> getBytesFromResponse(
          _i15.HttpClientResponse? response) =>
      (super.noSuchMethod(Invocation.method(#getBytesFromResponse, [response]),
              returnValue: Future<_i10.Uint8List>.value(_i10.Uint8List(0)))
          as _i8.Future<_i10.Uint8List>);
}
