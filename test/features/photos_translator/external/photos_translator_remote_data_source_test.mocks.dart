// Mocks generated by Mockito 5.3.0 from annotations
// in vido/test/features/photos_translator/external/photos_translator_remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i7;
import 'dart:io' as _i12;
import 'dart:typed_data' as _i8;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:vido/core/utils/http_responses_manager.dart' as _i11;
import 'package:vido/core/utils/path_provider.dart' as _i10;
import 'package:vido/features/photos_translator/domain/entities/pdf_file.dart'
    as _i3;
import 'package:vido/features/photos_translator/domain/entities/translation.dart'
    as _i5;
import 'package:vido/features/photos_translator/domain/entities/translations_file.dart'
    as _i4;
import 'package:vido/features/photos_translator/external/photos_translator_remote_adapter.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakePdfFile_2 extends _i1.SmartFake implements _i3.PdfFile {
  _FakePdfFile_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTranslationsFile_3 extends _i1.SmartFake
    implements _i4.TranslationsFile {
  _FakeTranslationsFile_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTranslation_4 extends _i1.SmartFake implements _i5.Translation {
  _FakeTranslation_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i7.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i2.Response>);
  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i8.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i6.Future<_i8.Uint8List>.value(_i8.Uint8List(0)))
          as _i6.Future<_i8.Uint8List>);
  @override
  _i6.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i6.Future<_i2.StreamedResponse>.value(
                  _FakeStreamedResponse_1(
                      this, Invocation.method(#send, [request]))))
          as _i6.Future<_i2.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [PhotosTranslatorRemoteAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotosTranslatorRemoteAdapter extends _i1.Mock
    implements _i9.PhotosTranslatorRemoteAdapter {
  MockPhotosTranslatorRemoteAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.PdfFile> getPdfFilesFromJson(List<Map<String, dynamic>>? jsonList) =>
      (super.noSuchMethod(Invocation.method(#getPdfFilesFromJson, [jsonList]),
          returnValue: <_i3.PdfFile>[]) as List<_i3.PdfFile>);
  @override
  List<Map<String, dynamic>> getJsonListFromPdfFiles(
          List<_i3.PdfFile>? files) =>
      (super.noSuchMethod(Invocation.method(#getJsonListFromPdfFiles, [files]),
          returnValue: <Map<String, dynamic>>[]) as List<Map<String, dynamic>>);
  @override
  _i3.PdfFile getPdfFileFromJson(Map<String, dynamic>? json) =>
      (super.noSuchMethod(Invocation.method(#getPdfFileFromJson, [json]),
              returnValue: _FakePdfFile_2(
                  this, Invocation.method(#getPdfFileFromJson, [json])))
          as _i3.PdfFile);
  @override
  List<_i4.TranslationsFile> getTranslationsFilesFromJson(
          List<Map<String, dynamic>>? jsonList) =>
      (super.noSuchMethod(
          Invocation.method(#getTranslationsFilesFromJson, [jsonList]),
          returnValue: <_i4.TranslationsFile>[]) as List<_i4.TranslationsFile>);
  @override
  List<Map<String, dynamic>> getJsonListFromTranslationsFiles(
          List<_i4.TranslationsFile>? files) =>
      (super.noSuchMethod(
          Invocation.method(#getJsonListFromTranslationsFiles, [files]),
          returnValue: <Map<String, dynamic>>[]) as List<Map<String, dynamic>>);
  @override
  _i4.TranslationsFile getTranslationsFileFromJson(
          Map<String, dynamic>? json) =>
      (super.noSuchMethod(
              Invocation.method(#getTranslationsFileFromJson, [json]),
              returnValue: _FakeTranslationsFile_3(this,
                  Invocation.method(#getTranslationsFileFromJson, [json])))
          as _i4.TranslationsFile);
  @override
  _i5.Translation getTranslationFromJson(Map<String, dynamic>? json) =>
      (super.noSuchMethod(Invocation.method(#getTranslationFromJson, [json]),
              returnValue: _FakeTranslation_4(
                  this, Invocation.method(#getTranslationFromJson, [json])))
          as _i5.Translation);
}

/// A class which mocks [PathProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPathProvider extends _i1.Mock implements _i10.PathProvider {
  MockPathProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> generatePath() =>
      (super.noSuchMethod(Invocation.method(#generatePath, []),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
}

/// A class which mocks [HttpResponsesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpResponsesManager extends _i1.Mock
    implements _i11.HttpResponsesManager {
  MockHttpResponsesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i8.Uint8List> getBytesFromResponse(
          _i12.HttpClientResponse? response) =>
      (super.noSuchMethod(Invocation.method(#getBytesFromResponse, [response]),
              returnValue: _i6.Future<_i8.Uint8List>.value(_i8.Uint8List(0)))
          as _i6.Future<_i8.Uint8List>);
}
