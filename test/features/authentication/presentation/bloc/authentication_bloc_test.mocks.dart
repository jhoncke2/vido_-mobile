// Mocks generated by Mockito 5.2.0 from annotations
// in vido/test/features/authentication/presentation/bloc/authentication_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:vido/features/authentication/domain/entities/user.dart'
    as _i6;
import 'package:vido/features/authentication/domain/failures/failures.dart'
    as _i5;
import 'package:vido/features/authentication/presentation/use_cases/login.dart'
    as _i3;
import 'package:vido/features/authentication/presentation/use_cases/logout.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [Login].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogin extends _i1.Mock implements _i3.Login {
  MockLogin() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AuthenticationFailure, void>> call(
          _i6.User? user) =>
      (super.noSuchMethod(Invocation.method(#call, [user]),
              returnValue:
                  Future<_i2.Either<_i5.AuthenticationFailure, void>>.value(
                      _FakeEither_0<_i5.AuthenticationFailure, void>()))
          as _i4.Future<_i2.Either<_i5.AuthenticationFailure, void>>);
}

/// A class which mocks [Logout].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogout extends _i1.Mock implements _i7.Logout {
  MockLogout() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AuthenticationFailure, void>> call() => (super
          .noSuchMethod(Invocation.method(#call, []),
              returnValue:
                  Future<_i2.Either<_i5.AuthenticationFailure, void>>.value(
                      _FakeEither_0<_i5.AuthenticationFailure, void>()))
      as _i4.Future<_i2.Either<_i5.AuthenticationFailure, void>>);
}
