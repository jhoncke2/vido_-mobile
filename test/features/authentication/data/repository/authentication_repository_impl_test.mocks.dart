// Mocks generated by Mockito 5.3.0 from annotations
// in vido/test/features/authentication/data/repository/authentication_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:vido/features/authentication/data/data_sources/authentication_local_data_source.dart'
    as _i5;
import 'package:vido/features/authentication/data/data_sources/authentication_remote_data_source.dart'
    as _i3;
import 'package:vido/features/authentication/domain/entities/user.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AuthenticationRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRemoteDataSource extends _i1.Mock
    implements _i3.AuthenticationRemoteDataSource {
  MockAuthenticationRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> login(_i2.User? user) =>
      (super.noSuchMethod(Invocation.method(#login, [user]),
          returnValue: _i4.Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<String> refreshAccessToken(String? oldAccessToken) => (super
      .noSuchMethod(Invocation.method(#refreshAccessToken, [oldAccessToken]),
          returnValue: _i4.Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<int> getUserId(String? accessToken) =>
      (super.noSuchMethod(Invocation.method(#getUserId, [accessToken]),
          returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
}

/// A class which mocks [AuthenticationLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationLocalDataSource extends _i1.Mock
    implements _i5.AuthenticationLocalDataSource {
  MockAuthenticationLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> setUser(_i2.User? user) => (super.noSuchMethod(
      Invocation.method(#setUser, [user]),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.User> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
              returnValue: _i4.Future<_i2.User>.value(
                  _FakeUser_0(this, Invocation.method(#getUser, []))))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<void> setAccessToken(String? accessToken) => (super.noSuchMethod(
      Invocation.method(#setAccessToken, [accessToken]),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> resetApp() => (super.noSuchMethod(
      Invocation.method(#resetApp, []),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<String> getAccessToken() =>
      (super.noSuchMethod(Invocation.method(#getAccessToken, []),
          returnValue: _i4.Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<int> getId() => (super.noSuchMethod(Invocation.method(#getId, []),
      returnValue: _i4.Future<int>.value(0)) as _i4.Future<int>);
}
